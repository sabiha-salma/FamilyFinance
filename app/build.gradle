apply plugin: 'com.android.application'
//wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../personal_signing.gradle'
} catch (ignored) {
}

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        applicationId "io.github.zwieback.familyfinance"
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode 10507
        versionName "1.5.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ignored) {
            }
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation("androidx.test.espresso:espresso-core:${versions.espressoLib}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlinLib}"
    // support libs
    implementation "androidx.appcompat:appcompat:${versions.appcompatLib}"
    implementation "androidx.cardview:cardview:${versions.supportLib}"
    implementation "androidx.legacy:legacy-support-v4:${versions.supportLib}"
    implementation "androidx.multidex:multidex:${versions.multidexLib}"
    implementation "androidx.recyclerview:recyclerview:${versions.supportLib}"
    implementation "com.google.android.material:material:${versions.materialLib}"
    // JPA
    implementation "androidx.sqlite:sqlite:${versions.sqliteAndroidXLib}"
    implementation "io.requery:requery:${versions.requeryLib}"
    implementation "io.requery:requery-android:${versions.requeryLib}"
    implementation "io.requery:sqlite-android:${versions.sqliteAndroidLib}"
    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxJavaLib}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxAndroidLib}"
    // icons
    implementation "com.mikepenz:iconics-core:${versions.iconicsLib}"
    implementation "com.mikepenz:iconics-views:${versions.iconicsLib}"
    implementation "com.mikepenz:material-design-iconic-typeface:${versions.materialDesignTypeface}"
    implementation "com.mikepenz:fontawesome-typeface:${versions.fontawesomeTypeface}"
    implementation "com.mikepenz:community-material-typeface:${versions.communityMaterialTypeface}"
    // materialize
    implementation "com.mikepenz:materialize:${versions.materializeLib}"
    // fast adapter
    implementation "com.mikepenz:fastadapter:${versions.fastAdapterLib}"
    implementation "com.mikepenz:fastadapter-commons:${versions.fastAdapterLib}"
    // material drawer
    implementation("com.mikepenz:materialdrawer:${versions.materialDrawerLib}") {
        transitive = true
        exclude module: "fastadapter"
        exclude module: "iconics-core"
        exclude group: "com.android.support"
    }
    // java.time
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.timeLib}"
    // java 8 streams
    implementation "com.annimon:stream:${versions.streamLib}"
    // crash report
    releaseImplementation "ch.acra:acra-mail:${versions.acraLib}"
    releaseImplementation "ch.acra:acra-dialog:${versions.acraLib}"
    // preferences
    implementation "com.takisoft.preferencex:preferencex:${versions.preferenceCompatLib}"
    // shared preferences
    implementation "ds.gendalf:gendalf:${versions.gendalfLib}"
    // file/directory picker
    implementation "com.nononsenseapps:filepicker:${versions.filepickerLib}"
    // permissions dispatcher
    implementation("com.github.hotchemi:permissionsdispatcher:${versions.permissionsDispatcherLib}") {
        exclude module: "support-v13"
    }
    // RxBinding
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${versions.rxBinding2Lib}"
    // chart
    implementation "com.github.PhilJay:MPAndroidChart:${versions.mpAndroidChartLib}"
    // project libs
    implementation project(':shared')
    implementation project(':validator')
    androidTestImplementation "androidx.test.ext:junit:${versions.androidxJunitLib}"
    testImplementation "junit:junit:${versions.junitLib}"
    annotationProcessor "io.requery:requery-processor:${versions.requeryLib}"
    annotationProcessor "ds.gendalf:compiler:${versions.gendalfLib}"
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:${versions.permissionsDispatcherLib}"
}
